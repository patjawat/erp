/**
 * Floatype.js - Floating Autocomplete Box for Textarea
 * Compatible with Yii2 and jQuery
 * Version: 1.0.0
 */
(function($) {
    'use strict';
    
    $.fn.floatype = function(options) {
        var defaults = {
            data: [],
            trigger: '@',
            minChars: 1,
            maxItems: 8,
            width: 200,
            itemHeight: 30,
            fontSize: '14px',
            backgroundColor: '#ffffff',
            borderColor: '#ddd',
            hoverColor: '#f5f5f5',
            selectedColor: '#007bff',
            textColor: '#333',
            zIndex: 9999,
            placement: 'bottom',
            delay: 200,
            caseSensitive: false,
            highlightMatch: true,
            allowCustom: true,
            onSelect: null,
            onShow: null,
            onHide: null,
            formatItem: null,
            filterFn: null
        };
        
        var settings = $.extend({}, defaults, options);
        
        return this.each(function() {
            var $textarea = $(this);
            var $dropdown = null;
            var currentQuery = '';
            var selectedIndex = -1;
            var isVisible = false;
            var searchTimeout = null;
            var triggerStart = -1;
            
            // Initialize
            init();
            
            function init() {
                createDropdown();
                bindEvents();
            }
            
            function createDropdown() {
                $dropdown = $('<div>')
                    .addClass('floatype-dropdown')
                    .css({
                        position: 'absolute',
                        display: 'none',
                        width: settings.width + 'px',
                        maxHeight: (settings.itemHeight * settings.maxItems) + 'px',
                        backgroundColor: settings.backgroundColor,
                        border: '1px solid ' + settings.borderColor,
                        borderRadius: '4px',
                        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',
                        overflowY: 'auto',
                        fontSize: settings.fontSize,
                        zIndex: settings.zIndex
                    })
                    .appendTo('body');
                
                // Prevent dropdown from losing focus
                $dropdown.on('mousedown', function(e) {
                    e.preventDefault();
                });
            }
            
            function bindEvents() {
                $textarea.on('keyup.floatype', function(e) {
                    var keyCode = e.keyCode || e.which;
                    
                    // Handle navigation keys when dropdown is visible
                    if (isVisible) {
                        switch(keyCode) {
                            case 38: // Up arrow
                                e.preventDefault();
                                navigateUp();
                                return;
                            case 40: // Down arrow
                                e.preventDefault();
                                navigateDown();
                                return;
                            case 13: // Enter
                                e.preventDefault();
                                selectCurrentItem();
                                return;
                            case 27: // Escape
                                hideDropdown();
                                return;
                        }
                    }
                    
                    // Clear previous timeout
                    if (searchTimeout) {
                        clearTimeout(searchTimeout);
                    }
                    
                    // Set new timeout for search
                    searchTimeout = setTimeout(function() {
                        handleInput();
                    }, settings.delay);
                });
                
                $textarea.on('keydown.floatype', function(e) {
                    var keyCode = e.keyCode || e.which;
                    
                    // Prevent default behavior for navigation when dropdown is visible
                    if (isVisible && [38, 40, 13].indexOf(keyCode) !== -1) {
                        e.preventDefault();
                    }
                });
                
                $textarea.on('blur.floatype', function() {
                    // Delay hiding to allow click on dropdown
                    setTimeout(function() {
                        hideDropdown();
                    }, 150);
                });
                
                // Click outside to hide
                $(document).on('click.floatype', function(e) {
                    if (!$(e.target).closest($textarea).length && 
                        !$(e.target).closest($dropdown).length) {
                        hideDropdown();
                    }
                });
            }
            
            function handleInput() {
                var caretPos = getCaretPosition();
                var text = $textarea.val();
                var query = extractQuery(text, caretPos);
                
                if (query !== null && query.length >= settings.minChars) {
                    currentQuery = query;
                    search(query);
                } else {
                    hideDropdown();
                }
            }
            
            function extractQuery(text, caretPos) {
                // Find the trigger character before caret
                var beforeCaret = text.substring(0, caretPos);
                var triggerIndex = beforeCaret.lastIndexOf(settings.trigger);
                
                if (triggerIndex === -1) {
                    return null;
                }
                
                // Check if there's a space before trigger (or it's at start)
                if (triggerIndex > 0 && beforeCaret[triggerIndex - 1] !== ' ' && 
                    beforeCaret[triggerIndex - 1] !== '\n') {
                    return null;
                }
                
                // Extract query after trigger
                var afterTrigger = beforeCaret.substring(triggerIndex + 1);
                
                // Check if query contains space or newline
                if (afterTrigger.indexOf(' ') !== -1 || afterTrigger.indexOf('\n') !== -1) {
                    return null;
                }
                
                triggerStart = triggerIndex;
                return afterTrigger;
            }
            
            function search(query) {
                var results = filterData(query);
                
                if (results.length > 0) {
                    showDropdown(results);
                } else {
                    hideDropdown();
                }
            }
            
            function filterData(query) {
                var results = [];
                var searchQuery = settings.caseSensitive ? query : query.toLowerCase();
                
                for (var i = 0; i < settings.data.length && results.length < settings.maxItems; i++) {
                    var item = settings.data[i];
                    var searchText = typeof item === 'string' ? item : item.text || item.value || '';
                    var compareText = settings.caseSensitive ? searchText : searchText.toLowerCase();
                    
                    var match = false;
                    if (settings.filterFn && typeof settings.filterFn === 'function') {
                        match = settings.filterFn(item, query);
                    } else {
                        match = compareText.indexOf(searchQuery) !== -1;
                    }
                    
                    if (match) {
                        results.push(item);
                    }
                }
                
                return results;
            }
            
            function showDropdown(results) {
                var caretCoords = getCaretCoordinates();
                selectedIndex = -1;
                
                // Clear dropdown
                $dropdown.empty();
                
                // Add items
                results.forEach(function(item, index) {
                    var $item = createDropdownItem(item, index);
                    $dropdown.append($item);
                });
                
                // Position dropdown
                positionDropdown(caretCoords);
                
                // Show dropdown
                $dropdown.show();
                isVisible = true;
                
                if (settings.onShow && typeof settings.onShow === 'function') {
                    settings.onShow.call($textarea[0], results);
                }
            }
            
            function createDropdownItem(item, index) {
                var text = typeof item === 'string' ? item : item.text || item.value || '';
                var displayText = text;
                
                // Custom formatting
                if (settings.formatItem && typeof settings.formatItem === 'function') {
                    displayText = settings.formatItem(item, currentQuery);
                } else if (settings.highlightMatch) {
                    displayText = highlightMatch(text, currentQuery);
                }
                
                var $item = $('<div>')
                    .addClass('floatype-item')
                    .attr('data-index', index)
                    .html(displayText)
                    .css({
                        padding: '8px 12px',
                        height: settings.itemHeight + 'px',
                        lineHeight: (settings.itemHeight - 16) + 'px',
                        cursor: 'pointer',
                        color: settings.textColor,
                        borderBottom: '1px solid #eee'
                    });
                
                // Hover effects
                $item.on('mouseenter', function() {
                    selectItem(index);
                });
                
                $item.on('click', function() {
                    selectCurrentItem();
                });
                
                return $item;
            }
            
            function highlightMatch(text, query) {
                if (!query) return text;
                
                var searchQuery = settings.caseSensitive ? query : query.toLowerCase();
                var searchText = settings.caseSensitive ? text : text.toLowerCase();
                var index = searchText.indexOf(searchQuery);
                
                if (index !== -1) {
                    var before = text.substring(0, index);
                    var match = text.substring(index, index + query.length);
                    var after = text.substring(index + query.length);
                    
                    return before + '<strong>' + match + '</strong>' + after;
                }
                
                return text;
            }
            
            function positionDropdown(caretCoords) {
                var textareaOffset = $textarea.offset();
                var scrollTop = $(window).scrollTop();
                var scrollLeft = $(window).scrollLeft();
                
                var left = textareaOffset.left + caretCoords.left - scrollLeft;
                var top = textareaOffset.top + caretCoords.top + 20 - scrollTop;
                
                // Adjust if dropdown goes outside viewport
                var windowWidth = $(window).width();
                var windowHeight = $(window).height();
                var dropdownHeight = $dropdown.outerHeight();
                
                if (left + settings.width > windowWidth) {
                    left = windowWidth - settings.width - 10;
                }
                
                if (top + dropdownHeight > windowHeight) {
                    top = textareaOffset.top + caretCoords.top - dropdownHeight - 5 - scrollTop;
                }
                
                $dropdown.css({
                    left: left + 'px',
                    top: top + 'px'
                });
            }
            
            function hideDropdown() {
                if (isVisible) {
                    $dropdown.hide();
                    isVisible = false;
                    selectedIndex = -1;
                    
                    if (settings.onHide && typeof settings.onHide === 'function') {
                        settings.onHide.call($textarea[0]);
                    }
                }
            }
            
            function navigateUp() {
                var itemCount = $dropdown.find('.floatype-item').length;
                selectedIndex = selectedIndex <= 0 ? itemCount - 1 : selectedIndex - 1;
                updateSelection();
            }
            
            function navigateDown() {
                var itemCount = $dropdown.find('.floatype-item').length;
                selectedIndex = selectedIndex >= itemCount - 1 ? 0 : selectedIndex + 1;
                updateSelection();
            }
            
            function selectItem(index) {
                selectedIndex = index;
                updateSelection();
            }
            
            function updateSelection() {
                $dropdown.find('.floatype-item').css('backgroundColor', '');
                
                if (selectedIndex >= 0) {
                    $dropdown.find('.floatype-item').eq(selectedIndex)
                        .css('backgroundColor', settings.hoverColor);
                }
            }
            
            function selectCurrentItem() {
                if (selectedIndex >= 0) {
                    var selectedData = filterData(currentQuery)[selectedIndex];
                    var insertText = typeof selectedData === 'string' ? selectedData : selectedData.value || selectedData.text || '';
                    
                    insertAtCaret(insertText);
                    hideDropdown();
                    
                    if (settings.onSelect && typeof settings.onSelect === 'function') {
                        settings.onSelect.call($textarea[0], selectedData, insertText);
                    }
                }
            }
            
            function insertAtCaret(text) {
                var caretPos = getCaretPosition();
                var textValue = $textarea.val();
                var before = textValue.substring(0, triggerStart);
                var after = textValue.substring(caretPos);
                
                var newText = before + settings.trigger + text + ' ' + after;
                var newCaretPos = before.length + settings.trigger.length + text.length + 1;
                
                $textarea.val(newText);
                setCaretPosition(newCaretPos);
                $textarea.focus();
            }
            
            function getCaretPosition() {
                var textarea = $textarea[0];
                return textarea.selectionStart;
            }
            
            function setCaretPosition(pos) {
                var textarea = $textarea[0];
                textarea.setSelectionRange(pos, pos);
            }
            
            function getCaretCoordinates() {
                var textarea = $textarea[0];
                var caretPos = getCaretPosition();
                
                // Create a mirror div
                var $mirror = $('<div>').css({
                    position: 'absolute',
                    visibility: 'hidden',
                    whiteSpace: 'pre-wrap',
                    wordWrap: 'break-word',
                    top: 0,
                    left: -9999,
                    width: $textarea.width(),
                    fontSize: $textarea.css('fontSize'),
                    fontFamily: $textarea.css('fontFamily'),
                    lineHeight: $textarea.css('lineHeight'),
                    padding: $textarea.css('padding')
                }).appendTo('body');
                
                var textBeforeCaret = textarea.value.substring(0, caretPos);
                $mirror.text(textBeforeCaret);
                
                var coordinates = {
                    left: $mirror.width(),
                    top: $mirror.height()
                };
                
                $mirror.remove();
                return coordinates;
            }
            
            // Public methods
            $textarea.data('floatype', {
                destroy: function() {
                    $textarea.off('.floatype');
                    $(document).off('.floatype');
                    if ($dropdown) {
                        $dropdown.remove();
                    }
                },
                hide: function() {
                    hideDropdown();
                },
                updateData: function(newData) {
                    settings.data = newData;
                }
            });
        });
    };
    
})(jQuery);