version: '3.8'

services:
  mysqlDB:
    image: mysql:8.0
    container_name: mysql_db
    hostname: mysqldboffice
    networks:
      web-network:
        aliases:
          - mysqlDB
    cap_add:
      - SYS_NICE
    restart: always
    env_file:
      - ./mysql.env
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql8.0/data:/var/lib/mysql
    command:
      [
        "mysqld",
        "--innodb-buffer-pool-size=1G",
        "--innodb-log-file-size=256M",
        "--innodb-flush-log-at-trx-commit=2",
        "--innodb-flush-method=O_DIRECT",
        "--tmp_table_size=64M",
        "--max-heap-table-size=64M",
        "--max-connections=200",
        "--table-open-cache=400",
        "--max-allowed-packet=64M",
        "--wait_timeout=28800",
        "--interactive_timeout=28800",
        "--character-set-server=utf8",
        "--collation-server=utf8_general_ci",
        "--sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
      ]

  phpmyadmin_mysql:
    image: phpmyadmin
    container_name: phpmyadmin_pma
    restart: always
    ports:
      - 8000:80
    environment:
      PMA_HOST: mysqlDB
      PMA_PORT: 3306
      UPLOAD_LIMIT: 300M
    networks:
      web-network:
        aliases:
          - phpmyadmin_pma

  erp:
    image: erp:1.1
    container_name: ${CONTAINER_NAME}
    platform: linux/amd64
    volumes:
      - ./source/demo/fileupload:/app/modules/filemanager/fileupload
      - /home/web-server/bookpdf:/app/bookpdf
    env_file:
      - ./source/demo/.env
    networks:
      web-network:
        aliases:
          - ${CONTAINER_NAME}
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      web-network:
        aliases:
          - nginx_proxy

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      web-network:
        aliases:
          - certbot

networks:
  web-network:
    driver: bridge
